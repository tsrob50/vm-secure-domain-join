{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of the Azure VM"
                }
        },
        "virtualMachineName": {
            "type": "string",
            "metadata": {
                "description": "A unique name for the VM"
                }
        },
        "virtualMachineSize": {
            "type": "string",
            "metadata": {
                "description": "Virtual Machine Size such as Standard_A1_V1, Standard_A2_V2 etc."
                }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Local admin account, cannot be Admin or Administrator"
                }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Local admin password, use the Resource ID string and secret name from the keyvault"
                }
        },
        "virtualNetworkResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "name of the virtual network Resource Group. Used if the VNet is in a different RG"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network to connect to. Must exist prior to deployment"
                }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Enter the subnet name, it must already exist"
            }
        },
        "ipAddress": {
            "type": "string",
            "metadata": {
                "description": "IP address for the VM"
                }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
                "description": "Name for the availability set, will create during deployment if it doesn't exist"
                }
        },
        "availabilitySetPlatformFaultDomainCount": {
            "type": "string",
            "defaultValue": "2",
            "metadata": {
                "description": "Number of Availability Set Fault Domains, default 2"
                }
        },
        "availabilitySetPlatformUpdateDomainCount": {
            "type": "string",
            "defaultValue": "5",
            "metadata": {
                "description": "Number of Availability Set Update Domains, default 2"
                }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account, will be created if it does not exist"
                }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "standard_ZRS"
            ],
            "metadata": {
                "description": "Select the storage account type"
            }
        },
        "sizeOfDataDisksInGB": {
            "type": "string",
            "defaultValue": "1023",
            "metadata": {
                "description": "Total size of data disk in GB. default 1 TB"
            }
        },
        "domainToJoin": {
            "type": "string",
            "metadata": {
            "description": "The FQDN of the AD domain to join, such as: domain.net"
            }
        },
        "domainUsername": {
            "type": "string",
            "metadata": {
                "description": "Username of the account on the domain"
            }
        },
        "domainPassword": {
            "type":"securestring",
            "metadata": {
            "description": "Password of the account on the domain, this is pulled from the KeyVault, no need to enter"
            }
        },
        "ouPath": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
            "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
            }
        },
        "domainJoinOptions": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            }
        }    
    },
    "variables": {
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), '_NIC1')]",
        "vnetId": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
               ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "fromImage",
                        "vhd": {
                            "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), '_os.vhd')]"
                        },
                        "name": "[concat(parameters('virtualmachinename'), '_os')]"
                    },
                    "dataDisks": [
                    {
                        "name": "[concat(parameters('virtualMachineName'),'_data')]",
                        "lun": 0,
                        "vhd": {
                            "uri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), '_data.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "Empty",
                        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
                     }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "licenseType": "Windows_Server",
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                }
            }
        },
        {
            "name": "[parameters('availabilitySetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('location')]",
            "properties": {
                "platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
                "platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]"
            }
        },
        {
            "name": "[parameters('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2016-01-01",
            "location": "[parameters('location')]",
            "sku": {
                 "name": "[parameters('storageAccountType')]"
            },
            "kind":"Storage"
        },
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('ipAddress')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineName'),'/joindomain')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainToJoin')]",
                    "OUPath": "[parameters('ouPath')]",
                    "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                    "Restart": "true",
                    "Options": "[parameters('domainJoinOptions')]"
                },
                "protectedSettings": {
                "Password": "[parameters('domainPassword')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('virtualMachineName'),'/BGInfo')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "BGInfo",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Properties": [
                    ]
                }  
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}